---
import Base from "../../layouts/Base.astro";
import { getCollection, render } from "astro:content";
import Img from "../../components/Img.astro";

// Build all project pages at build time
export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((p) => ({
    params: { slug: p.slug },
    props: { entry: p },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);

// Frontmatter fields
const {
  title,
  summary,
  hero,
  client,
  date,
  tags = [],
  services = [],
  tech = [],
  links = {},
  metrics = [],
  testimonial = null,
  status,
  available,
} = entry.data as any;

/** Detect ‚ÄúAvailable Site‚Äù demo projects */
const tagList = (tags as string[]).map((x) => (x || "").toLowerCase());
const isAvailableSite =
  (status && status.toString().toLowerCase() === "available") ||
  available === true ||
  tagList.includes("available");

/** Map all assets under /src/assets/images/** so we can resolve legacy `/images/**` */
const assetUrls = import.meta.glob("../../assets/images/**/*", {
  eager: true,
  import: "default",
}) as Record<string, string>;

function resolveAssetUrl(input?: string): string | undefined {
  if (!input) return undefined;
  if (/^https?:\/\//i.test(input)) return input;

  if (input.startsWith("/images/")) {
    const baseKey = ".." + input.replace("/images", "/assets/images");
    const withWebp = baseKey.replace(/\.(png|jpe?g|gif|tiff|bmp|webp)$/i, ".webp");
    const with1200 = baseKey.replace(/\.(png|jpe?g|gif|tiff|bmp|webp)$/i, "-1200.webp");
    if (assetUrls[with1200]) return assetUrls[with1200];
    if (assetUrls[withWebp]) return assetUrls[withWebp];
    if (assetUrls[baseKey]) return assetUrls[baseKey];
    return input;
  }
  return input;
}

function withSuffix(u: string, suffix: string) {
  return u.replace(/\.(png|jpe?g|gif|tiff|bmp|webp)$/i, `${suffix}.webp`);
}

function extractDimsFromFilename(u?: string): { w: number; h: number } | null {
  if (!u) return null;
  const m = u.match(/-(\d{2,5})x(\d{2,5})\.[a-z0-9]+$/i);
  if (!m) return null;
  const w = parseInt(m[1], 10);
  const h = parseInt(m[2], 10);
  if (Number.isFinite(w) && Number.isFinite(h) && w > 0 && h > 0) return { w, h };
  return null;
}

const heroUrlRaw = resolveAssetUrl(hero);
const testimonialPhotoUrl = resolveAssetUrl(testimonial?.photo);
const heroDims = extractDimsFromFilename(heroUrlRaw) ?? { w: 1200, h: 675 };
const heroMobile = heroUrlRaw ? withSuffix(heroUrlRaw, "-768") : undefined;
const heroLarge = heroUrlRaw ? withSuffix(heroUrlRaw, "-1200") : undefined;

const t = tagList;
const isDesign = t.includes("design") || t.includes("graphic") || t.includes("print");
const eyebrow = isDesign
  ? "Graphic Design ‚Ä¢ Print"
  : (tech.length ? tech.slice(0, 3).join(" ‚Ä¢ ") : (tags[0] ?? "Case Study"));

const siteOrigin = Astro.site ? (Astro.site as URL).origin : "https://mattblethen.com";
const projectUrl = `${siteOrigin}/projects/${entry.slug}/`;

function toAbsolute(u?: string) {
  if (!u) return undefined;
  if (/^https?:\/\//i.test(u)) return u;
  return `${siteOrigin}${u.startsWith("/") ? u : `/${u}`}`;
}
const heroAbs = toAbsolute(heroUrlRaw);

let year: string | null = null;
if (date) {
  const d = new Date(date as any);
  if (!isNaN(d.getTime())) year = String(d.getFullYear());
}

const projectSchema = {
  "@context": "https://schema.org",
  "@type": "CreativeWork",
  name: title,
  headline: title,
  description: summary ?? "Project case study by Matt Blethen",
  image: heroAbs ?? undefined,
  datePublished: date ? new Date(date as any).toISOString().slice(0, 10) : undefined,
  url: projectUrl,
  creator: { "@type": "Person", name: "Matt Blethen", url: siteOrigin },
  keywords: tags,
  ...(client ? { producer: { "@type": "Organization", name: client } } : {}),
};

const reviewSchema = testimonial?.quote
  ? {
      "@context": "https://schema.org",
      "@type": "Review",
      itemReviewed: { "@type": "CreativeWork", name: title, url: projectUrl },
      reviewBody: testimonial.quote,
      author: {
        "@type": "Person",
        name: testimonial.name ?? "Client",
        ...(testimonial.title ? { jobTitle: testimonial.title } : {}),
      },
      ...(testimonial.rating
        ? { reviewRating: { "@type": "Rating", ratingValue: String(testimonial.rating), bestRating: "5", worstRating: "1" } }
        : {}),
    }
  : null;

const crumbs: Array<{ name: string; url?: string }> = [
  { name: "Home", url: `${siteOrigin}/` },
  { name: "Projects", url: `${siteOrigin}/#projects` },
  { name: title, url: projectUrl },
];
const structuredData = reviewSchema ? [projectSchema, reviewSchema] : [projectSchema];
---

<Base
  title={title}
  description={summary ?? "Project case study"}
  image={heroUrlRaw ?? "/images/og-default.jpg"}
  breadcrumbs={crumbs}
  structuredData={structuredData}
>
  <Fragment slot="head">
    {heroUrlRaw ? (
      <link
        rel="preload"
        as="image"
        imagesrcset={`${heroMobile ?? ""} 768w, ${heroLarge ?? heroUrlRaw} 1200w`}
        imagesizes="(max-width: 640px) 100vw, (max-width: 1200px) 100vw, 1200px"
      />
    ) : null}
  </Fragment>

  <style>
    .project-grid {{
      display: grid;
      grid-template-columns: minmax(0, 1fr) 340px;
      gap: 28px;
    }}
    @media (max-width: 960px) {{
      .project-grid {{ grid-template-columns: 1fr; }}
      .project-grid aside {{ order: 2; }}
    }}
    .warning-bar {{
      background: #fffbe5;
      border: 1px solid #f5d25b;
      border-radius: 8px;
      padding: 12px 18px;
      margin-bottom: 24px;
      font-size: 0.95rem;
      color: #6b5500;
      box-shadow: 0 1px 3px rgba(0,0,0,0.06);
      line-height: 1.4;
    }}
    .warning-bar strong {{ color: #c27a00; }}
    .project-hero .hero-img img {{
      border-radius: var(--radius);
      object-fit: cover;
      width: 100%;
      height: auto;
      display: block;
      border: 1px solid var(--line);
      box-shadow: var(--shadow);
    }}
    .testimonial .avatar,
    .testimonial .avatar img {{
      width: 64px; height: 64px;
      border-radius: 50%;
      object-fit: cover;
      border: 1px solid var(--line);
      display: block;
    }}
    .testimonial {{
      display: grid;
      grid-template-columns: 64px 1fr;
      gap: 14px;
      align-items: start;
    }}
    .testimonial blockquote {{ margin: 0; font-size: 1.02rem; line-height: 1.55; }}
    .testimonial footer {{ margin-top: 8px; color: var(--muted, #555); font-size: .95rem; }}
    .stars {{ display: inline-flex; gap: 2px; margin-left: 8px; font-size: .95rem; }}
    .stars .on {{ opacity: 1; }}
    .stars .off {{ opacity: .25; }}
  </style>

  <div class="wrap project">
    <!-- Breadcrumbs -->
    <nav class="crumbs" aria-label="breadcrumbs">
      <a href="/">Home</a> &nbsp;/&nbsp; <a href="/#projects">Projects</a> &nbsp;/&nbsp; {title}
    </nav>

    {isAvailableSite ? (
      <div class="warning-bar" role="note">
        <strong>Demo Site:</strong> This project is a live demo framed around a real-world example.
        You can <a href="/contact">purchase this theme</a> and have it adapted to your brand or business.
      </div>
    ) : null}

    <!-- HERO -->
    <section class="hero project-hero">
      <div>
        <div class="eyebrow">{eyebrow}</div>
        <h1 class="title">{title}</h1>
        {summary ? <p class="lede">{summary}</p> : null}

        <div class="meta" aria-label="Project meta">
          {client ? <span class="chip">Client: {client}</span> : null}
          {year ? <span class="chip">Year: {year}</span> : null}
          {isDesign ? <span class="chip">Format: 8.5√ó11 in</span> : null}
        </div>

        {links?.live ? (
          <div class="links">
            <a class="btn" href={links.live} target="_blank" rel="noreferrer">View Live</a>
          </div>
        ) : null}
      </div>

      {heroUrlRaw ? (
        <figure class="hero-img">
          <picture>
            <source srcset={heroMobile} type="image/webp" media="(max-width: 640px)" />
            <source srcset={heroLarge} type="image/webp" media="(max-width: 1200px)" />
            <img
              src={heroLarge ?? heroUrlRaw}
              alt={title + " hero image"}
              width={heroDims.w}
              height={heroDims.h}
              loading="eager"
              fetchpriority="high"
              decoding="async"
              class="w-full"
            />
          </picture>
        </figure>
      ) : null}
    </section>

    <!-- TWO-COLUMN GRID -->
    <section class="project-grid" aria-label="Project content">
      <div>
        <article class="card">
          <Content />
        </article>

        {testimonial?.quote ? (
          <article class="card">
            <h2>Client Comments</h2>
            <div class="testimonial">
              {testimonialPhotoUrl ? (
                <Img
                  class="avatar"
                  src={testimonialPhotoUrl}
                  alt={(testimonial.name ?? "Client") + " ‚Äî photo"}
                  width={64}
                  height={64}
                  loading="lazy"
                  decoding="async"
                />
              ) : (
                <div class="avatar" style="display:flex;align-items:center;justify-content:center;background:#f2f2f2;">üë§</div>
              )}
              <div>
                <blockquote>‚Äú{testimonial.quote}‚Äù</blockquote>
                <footer>
                  <strong>{testimonial.name ?? "Client"}</strong>
                  {testimonial.title ? <> ‚Äî {testimonial.title}</> : null}
                  {typeof testimonial.rating === "number" ? (
                    <span class="stars" aria-label={`Rating ${testimonial.rating} out of 5`}>
                      {Array.from({ length: 5 }).map((_, i) => (
                        <span class={i < (testimonial.rating as number) ? "on" : "off"}>‚òÖ</span>
                      ))}
                    </span>
                  ) : null}
                </footer>
              </div>
            </div>
          </article>
        ) : null}
      </div>

      <aside>
        {services.length ? (
          <div class="card">
            <h2>Services</h2>
            <ul class="list">
              {services.map((s: string) => <li>{s}</li>)}
            </ul>
          </div>
        ) : null}

        {tech.length ? (
          <div class="card">
            <h2>Tech</h2>
            <ul class="list">
              {tech.map((x: string) => <li>{x}</li>)}
            </ul>
          </div>
        ) : null}

        {tags.length ? (
          <div class="card">
            <h2>Tags</h2>
            <div class="meta" style="padding:10px">
              {tags.map((tag: string) => <span class="chip">{tag}</span>)}
            </div>
          </div>
        ) : null}

        {metrics.length ? (
          <div class="card">
            <h2>Outcomes</h2>
            <ul class="list outcomes-list">
              {metrics.map((m: string) => <li>{m}</li>)}
            </ul>
          </div>
        ) : null}
      </aside>
    </section>

    <div id="gallery-modal" class="gallery-modal" hidden aria-hidden="true" role="dialog" aria-label="Image preview">
      <button class="close" aria-label="Close preview">&times;</button>
      <img id="gallery-modal-img" alt="" />
    </div>

    <div class="bottom-nav">
      <a href="/#projects">‚Üê Back to Projects</a>
      <a href="/contact">Start a project ‚Üí</a>
    </div>
  </div>

  <script is:inline>
    (function () {
      var gallery = document.querySelector('.case-gallery-castle');
      var modal = document.getElementById('gallery-modal');
      var modalImg = document.getElementById('gallery-modal-img');
      var closeBtn = modal ? modal.querySelector('.close') : null;
      if (!gallery || !modal || !modalImg || !closeBtn) return;
      function openModal(src, alt) {{
        modalImg.src = src;
        modalImg.alt = alt || '';
        modal.removeAttribute('hidden');
        modal.setAttribute('aria-hidden', 'false');
        document.body.style.overflow = 'hidden';
        closeBtn.focus();
      }}
      function closeModal() {{
        modal.setAttribute('hidden', '');
        modal.setAttribute('aria-hidden', 'true');
        modalImg.src = '';
        modalImg.alt = '';
        document.body.style.overflow = '';
      }}
      gallery.addEventListener('click', function (e) {{
        var img = e.target && e.target.closest && e.target.closest('img');
        if (!img) return;
        var full = img.getAttribute('data-full') || img.src;
        openModal(full, img.alt);
      }});
      closeBtn.addEventListener('click', closeModal);
      modal.addEventListener('click', function (e) {{ if (e.target === modal) closeModal(); }});
      document.addEventListener('keydown', function (e) {{
        if (e.key === 'Escape' && modal.getAttribute('aria-hidden') === 'false') closeModal();
      }});
    })();
  </script>
</Base>
