---
import Base from "../layouts/Base.astro";
---

<Base title="Contact — Matt Blethen" description="Get in touch about a project">
  <main class="wrap contact-page">
    <h1>Contact Me</h1>
    <p class="muted">
      Have a project in mind or just want to say hello? Fill out the form below or email me directly at
      <a href="mailto:mattblethen@gmail.com">mattblethen@gmail.com</a>.
    </p>

    <form
      id="contact-form"
      action="https://formspree.io/f/xjkadkdy"
      method="POST"
      class="contact-form"
      novalidate
    >
      <label for="name">
        Name
        <input
          id="name"
          type="text"
          name="name"
          required
          autocomplete="name"
          placeholder="Your name"
        />
      </label>

      <label for="email">
        Email
        <input
          id="email"
          type="email"
          name="_replyto"
          required
          autocomplete="email"
          inputmode="email"
          placeholder="you@example.com"
        />
      </label>

      <label for="message">
        Message
        <textarea
          id="message"
          name="message"
          rows="6"
          required
          autocomplete="off"
          placeholder="Tell me a bit about your project, timeline, and goals…"
        ></textarea>
      </label>

      <!-- Hidden fields -->
      <input type="hidden" name="_subject" value="New inquiry from mattblethen.com" />
      <!-- Spam honeypot -->
      <input type="text" name="_gotcha" style="display:none" tabindex="-1" autocomplete="off" />

      <button id="submit-btn" type="submit" class="cta">Send Message</button>

      <!-- Live form status -->
      <p id="form-status" class="muted" role="status" aria-live="polite" style="min-height:1.2em;"></p>
    </form>
  </main>

  <script is:inline>
    (function () {
      const form = document.getElementById('contact-form');
      const btn  = document.getElementById('submit-btn');
      const status = document.getElementById('form-status');

      if (!form || !btn || !status) return;

      function setBusy(isBusy, text) {
        btn.disabled = isBusy;
        btn.textContent = isBusy ? 'Sending…' : 'Send Message';
        status.textContent = text || '';
      }

      function validateField(el) {
        if (!el) return true;
        if (!el.checkValidity()) {
          el.setAttribute('aria-invalid', 'true');
          return false;
        }
        el.removeAttribute('aria-invalid');
        return true;
      }

      // Lightweight client-side validation UX
      form.addEventListener('input', (e) => validateField(e.target));

      form.addEventListener('submit', async (e) => {
        // Native validation first
        const ok =
          validateField(document.getElementById('name')) &
          validateField(document.getElementById('email')) &
          validateField(document.getElementById('message'));

        if (!ok) {
          e.preventDefault();
          status.textContent = 'Please fix the highlighted fields.';
          return;
        }

        // Let Formspree handle it by default; for nicer UX, do fetch submit:
        e.preventDefault();
        setBusy(true);

        try {
          const formData = new FormData(form);
          const resp = await fetch(form.action, {
            method: 'POST',
            body: formData,
            headers: { 'Accept': 'application/json' }
          });

          if (resp.ok) {
            form.reset();
            setBusy(false, 'Thanks! Your message has been sent.');
          } else {
            setBusy(false, 'Hmm, something went wrong. Please try again or email me directly.');
          }
        } catch (err) {
          setBusy(false, 'Network error. Please try again in a moment.');
        }
      });
    })();
  </script>
</Base>
